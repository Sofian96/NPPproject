import React, { Component } from 'react'
import { StyleSheet, css } from 'aphrodite'
import { Colors } from '../themes'

let selectTab1 = 0
let selectTab2 = 0
class TabsUnderline extends Component {
  constructor(props) {
    super(props)
    this.state = {
      currentIndex: this.props.name === 'find' ? selectTab1 : selectTab2
    }
  }
  static defaultProps = {
    tabTitleStyle: {
      flex: 1,
      height: '0.84rem',
      textAlign: 'center',
      color: '#99999f',
      borderBottom: '1px solid #ddd',
      display: 'inline-block',
      fontSize: '0.32rem',
      lineHeight: '0.84rem'
    },

    tabTitleActiveStyle: {
      flex: 1,
      height: '0.84rem',
      textAlign: 'center',
      color: 'rgba(0, 153, 255, 1)',
      borderBottom: '4px solid ',
      borderBottomColor: 'rgba(0, 153, 255, 1)',
      display: 'inline-block',
      fontSize: '0.32rem',
      lineHeight: '0.84rem'
    },
  }

  render() {
    console.log('selectTab', selectTab1,selectTab2)
    const { tabTitleStyle, tabTitleActiveStyle, children } = this.props

    const TabStyles = StyleSheet.create({
      tabTitle: tabTitleStyle,
      tabTitleActive: tabTitleActiveStyle,
      tabbar: {
        position: 'fixed',
        width: '100%',
        top: 0,
        zIndex: 99,
        backgroundColor: '#fff',
      }
    })

    return (
      <div style={{height:'100%'}}>
        {/*动态生成Tab导航*/}
        <div style={{ display: 'flex' }} className={this.props.name === 'find' ? css(TabStyles.tabbar) : null}>
          {
            React.Children.map(children, (item, index) => {
              return (
                <div onClick={() => {
                  if (this.props.name === 'find') {
                    selectTab1 = index
                    this.setState({ currentIndex: selectTab1 })
                    this.props.change(index)
                  }
                  else{
                    selectTab2=index
                    this.setState({ currentIndex: selectTab2 })
                  }

                }}

                  className={this.state.currentIndex === index ? css(TabStyles.tabTitleActive) : css(TabStyles.tabTitle)}>
                  {item.props.name}
                </div>
              )
            })
          }
        </div>
        {/*Tab内容区域*/}
        <div>
          {
            React.Children.map(children, (item, index) => {
              return (
                <div style={this.state.currentIndex === index ? { display: 'block' } : { display: 'none' }}>
                  {item}
                </div>
              )
            })
          }
        </div>
      </div>
    )
  }
}

export default TabsUnderline