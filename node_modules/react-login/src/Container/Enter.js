import React, { Component } from 'react'
import { browserHistory, hashHistory } from 'react-router'

import { Tabs, Toast, Modal } from 'antd-mobile'
import { StyleSheet, css } from 'aphrodite'

import { Fonts, Colors, images } from '../themes'

import { appService, appInfo } from '../service'

import URI from 'urijs'

import BgImage from '../Component/BgImage'

import '../../assets/antd.css'
import TabsUnderline from '../Component/TabsUnderline'

class Enter extends Component{
  constructor(props) {
    super(props)
    this.createResource = this.createResource.bind(this) //注册功能
    this.login = this.login.bind(this) //登录功能
    this.state = {
      checked: true,
      telephone: localStorage.getItem('telephone'),
    }
    console.log('Enter', this.props)
  }

	//注册 包括密码 确认密码 电话号码
  createResource(password1, password2, telephone,invite_code) {
    this.values = {
      password1: password1,
      password2: password2,
      telephone: telephone,
    }
    Toast.loading('请稍等...')
    
    //let url = `${appInfo.address.register}`
      let url=this.props.registerUrl //传入的注册的url
    appService.request(url,
      JSON.stringify(this.values), false, 'POST')
      .then((result) => {
          console.log('result', result)
          localStorage.setItem('telephone', result.telephone)
          localStorage.setItem('userName', result.nickname)
          localStorage.setItem('userId', result.id)
          localStorage.setItem('timestamp', new Date().getTime())
          localStorage.setItem('token', result.token)
          Toast.hide()
          if (this.props.onLogin) {
            this.props.onLogin()
          } else {
           
            let uri = new URI(window.location.href)
            let query = uri.query(true)
            const { next } = query
            if (next) {
              this.props.router.replace({
                pathname: next,
                state: this.props.location.state
              })
            } else {
              browserHistory.push({
                pathname: '/'
              })
            }
          }
        }
      )
      .catch(error => {
          Toast.fail('注册失败', 1)
        }
      )
  }

  login(password, telephone) {
    this.values = {
      password: password,
      telephone: telephone,
      role:'normal'
    }
    Toast.loading('请稍等...')
    //let url = `${appInfo.address.login}`
      let url=this.props.loginUrl //登录的url
    appService.request(url,
      JSON.stringify(this.values), false, 'POST')
      .then((result) => {
          console.log('result', result)
          localStorage.setItem('userName', result.user.nickname)
          localStorage.setItem('userId', result.user.id)
          localStorage.setItem('timestamp', new Date().getTime())
          localStorage.setItem('token', result.token)
          Toast.hide()
          if (this.props.onLogin != undefined) {
            this.props.onLogin()
          } else {
            let uri = new URI(window.location.href)
            let query = uri.query(true)
            const { next } = query
            if (next) {
              this.props.router.replace({
                pathname: next,
                state: this.props.location.state
              })
            } else {
              browserHistory.push({
                pathname: '/'
              })
            }
          }
        }
      )
      .catch(error => {
          Toast.fail('用户名或密码错误', 1)
        }
      )
  }

	render() {
		return (
			<div style={{ paddingBottom: '0.5rem' }}>
				<div>
					<TabsUnderline 	number={2}>
						<div name="登录">
							<div>
								<div
                  style={{
                    padding: '0 1rem',
                    position: 'fixed',
                    transform: 'translateY(-50%)',
                    width:'100%',
                    boxSizing:'border-box',
                    top: '50%' }}>
									<div style={{ margin: 'auto auto', height: '1.8rem', width: '1.8rem', }}>
                    <img
                      src={require('../../image/login/middleimage.jpg')}
                      width='100%'
                      height='100%'
                      style={{ borderRadius: '50%' }} />
									</div>
									<div style={{ textAlign: 'center' }}>
										<input
                      placeholder={localStorage.getItem("telephone") ? null : '请输入账号'}
											value={this.state.telephone}
                      style={{
                        border: 'none',
                        padding: '0.3rem 0',
                        width: '100%',
                        backgroundColor: 'transparent',
                        textAlign: 'center',
                        borderBottom: '1px solid #a2a2a2' }}
											onChange={
												(event) => {
													this.zhangHao = event.target.value
													if (this.state.checked) {
														localStorage.setItem("telephone", this.zhangHao, )
													}
													this.setState({
														telephone: this.zhangHao
													})
												}
											}
										/>
                    <input
                      placeholder='请输入密码'
                      type='password'
                      style={{
                        border: 'none',
                        padding: '0.3rem 0',
                        width: '100%',
                        backgroundColor: 'transparent',
                        textAlign: 'center',
                        borderBottom: '1px solid #a2a2a2' }}
                      onChange={
                        (event) => {
                          this.miMa = event.target.value
                          this.setState({
                            password: this.miMa
                          })
                        }
                      }
                    />
									</div>
									<div style={{ display: 'table', width: '100%', margin: '0.36rem 0' }}>
                    <div
                      style={{
                        width: '0.32rem',
                        height: '0.32rem',
                        display: 'table-cell',
                        backgroundColor: '#fff',
                        border: '0.04rem solid #959595',
                        borderRadius: 10,
                        position: 'relative', }}
                      className='checkboxOne'>
											<input type='checkbox' id="checkbox01" checked={this.state.checked}
											/>
											<label htmlFor="checkbox01"
												onClick={
													() => {
														if (this.state.checked === false) {
															this.setState({
																checked: true
															})
														}
														else {
															localStorage.clear()
															this.setState({
																checked: false,
																telephone: ''
															})

														}
													}
												}
											></label>
										</div>
                    <span
                      style={{
                        display: 'table-cell',
                        verticalAlign: 'middle',
                        fontSize: '0.3rem',
                        color: Colors.grey2,
                        paddingLeft: '0.3rem' }}>7天内免登录</span>
									</div>
							
								</div>
                <div
                  className={css(styles.enroll)}
                  onClick={
                    () => {
                      this.login(this.state.password, this.state.telephone)
                    }
                  }
                >
                  登录
                </div>
							</div>
						</div>

						<div name="注册" >
							<div>
                <div
                  style={{
                    padding: '0 1rem',
                    position: 'fixed',
                    transform: 'translateY(-50%)',
                    top: '50%',
                    width:'100%',
                    boxSizing:'border-box', }}>
									<div style={{ margin: 'auto auto', height: '1.8rem', width: '1.8rem', }}>
                    <img
                      src={require('../../image/login/middleimage.jpg')}
                      width='100%'
                      height='100%'
                      style={{ borderRadius: '50%' }} />
									</div>
									<div style={{ textAlign: 'center', marginBottom: '0.5rem' }}>
										<input
                      placeholder='请输入手机号'
                      style={{
                        border: 'none',
                        padding: '0.3rem 0',
                        width: '100%',
                        backgroundColor: 'transparent',
                        textAlign: 'center',
                        borderBottom: '1px solid #a2a2a2' }}
											onBlur={
												(event) => {
													this.numberValue = event.target.value
													this.reg = /^1(3|4|5|7|8)\d{9}$/;//校验电话号
													if (!this.reg.test(this.numberValue)) {
														Toast.info('手机号格式错误', 1)
													}
												}
											}
										/>
                    <input
                      type='password'
                      placeholder='请输入密码'
                      style={{
                        padding: '0.3rem 0',
                        border: 'none',
                        width: '100%',
                        backgroundColor: 'transparent',
                        textAlign: 'center',
                        borderBottom: '1px solid #a2a2a2' }}
                      onBlur={
                        (event) => {
                          this.passwordValue = event.target.value
                          console.log(this.passwordValue.length)
                          if (this.passwordValue.length < 6) {
                            Toast.info('请输入6位密码', 1)
                          }
                        }
                      }
                    />
                    <input
                      type='password'
                      placeholder='请再次输入确认密码'
                      style={{
                        padding: '0.3rem 0',
                        border: 'none',
                        width: '100%',
                        backgroundColor: 'transparent',
                        textAlign: 'center',
                        borderBottom: '1px solid #a2a2a2' }}
                      onBlur={
                        (event) => {
                          this.password = event.target.value
                          if (this.password !== this.passwordValue) {
                            Toast.info('两次密码输入不一致,请重新输入', 1)
                          }
                        }
                      }
                    />
									</div>
								</div>
                <div
                  className={css(styles.enroll)}
                  onClick={
                    () => {
                      if (this.numberValue
                        && this.password
                        && this.passwordValue
                        && this.reg.test(this.numberValue)
                        && this.passwordValue.length >= 6
                        && this.password === this.passwordValue) {
                        this.createResource(this.passwordValue, this.password, this.numberValue,this.inviteCode)
                      }
                    }
                  }
                >
                  注册
                </div>
							</div>
						</div>
					</TabsUnderline>
				</div>
			</div>
		)
	}
}

const styles = StyleSheet.create({
	enroll: {
		width: '80%',
		height: '0.8rem',
		borderRadius: '1.4rem',
		textAlign: 'center',
		color: Colors.navbj,
    backgroundColor: Colors.theme,
		fontSize: '0.28rem',
		margin: '0 auto',
		lineHeight: '0.8rem',
		fontWeight: 800,
		position: 'absolute',
		left: 0,
		right: 0,
		bottom: '1.4rem',
	},
})
export default Enter
